#!/usr/bin/env php
<?php

/*
 * This file is part of the Lockbox package.
 *
 * Copyright Â© 2014 Erin Millard
 *
 * For the full copyright and license information, please view the LICENSE file
 * that was distributed with this source code.
 */

use Eloquent\Lockbox\Key\KeyGenerator;
use Eloquent\Lockbox\Key\KeyWriter;
use Eloquent\Lockbox\Password\Cipher\Parameters\PasswordEncryptParameters;

require __DIR__ . '/../../vendor/autoload.php';

$name = null;
if (isset($_SERVER['argv'][1])) {
    $name = $_SERVER['argv'][1] ?: null;
}

$description = null;
if (isset($_SERVER['argv'][2])) {
    $description = $_SERVER['argv'][2] ?: null;
}

$encryptSecretBits = null;
if (isset($_SERVER['argv'][3])) {
    $encryptSecretBits = intval($_SERVER['argv'][3]) ?: null;
}

$authSecretBits = null;
if (isset($_SERVER['argv'][4])) {
    $authSecretBits = intval($_SERVER['argv'][4]) ?: null;
}

$password = null;
if (isset($_SERVER['argv'][5])) {
    $password = $_SERVER['argv'][5];
}

$iterations = null;
if (isset($_SERVER['argv'][6])) {
    $iterations = intval($_SERVER['argv'][6]) ?: null;
}

if (null !== $password && !$iterations) {
    throw new RuntimeException('Iterations must be specified.');
}

$key = KeyGenerator::instance()->generateKey(
    $name,
    $description,
    $encryptSecretBits,
    $authSecretBits
);

if (null === $password) {
    KeyWriter::instance()->writeStream($key, STDOUT);
} else {
    KeyWriter::instance()->writeStreamWithPassword(
        $key,
        new PasswordEncryptParameters($password, $iterations),
        STDOUT
    );
}

echo PHP_EOL;
